package service;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import interfaces.Crud;
import model.Usuario;

public class UsuarioService implements Crud<Usuario> {

	@Override
	public void cadastrar(List<Usuario> list) {
		String username = JOptionPane.showInputDialog("USERNAME: ");
		String senha = JOptionPane.showInputDialog("SENHA: ");
		String nivel = JOptionPane.showInputDialog("NIVEL (admin, gerente, vendedor): ");

		if (nivel.equals("admin") || nivel.equals("gerente") || nivel.equals("vendedor")) {
			if (nivel.equals("admin")) {
				JOptionPane.showMessageDialog(null, "Não é permitido cadastrar mais usuarios com nível 'admin'");
			} else {
				String nome = JOptionPane.showInputDialog("NOME: ");
				String telefone = JOptionPane.showInputDialog("TELEFONE: ");
				String email = JOptionPane.showInputDialog("EMAIL: ");
				String resposta = JOptionPane.showInputDialog("RESPOSTA SECRETA (qual nome do seu pet?): ");

				list.add(new Usuario(username, senha, nivel, nome, telefone, email, resposta));
			}
		} else {
			JOptionPane.showMessageDialog(null, "Não permitido cadastrar esse nível");
		}

	}

	@Override
	public void listar(List<Usuario> list) {
		String lista = "USUÁRIOS \n";

		for (int i = 0; i < list.size(); i++) {
			lista += "ID " + (i + 1) + ": ";
			lista += list.get(i).getUsername() + ", ";
			lista += list.get(i).getNivel();
			lista += "\n";
		}
		JOptionPane.showMessageDialog(null, lista);
	}

	@Override
	public void alterar(List<Usuario> list) {
		int indiceUsuarioSelecionado = -1;
		String lista = "USUÁRIOS \n";

		for (int i = 0; i < list.size(); i++) {
			lista += "ID " + (i + 1) + ": ";
			lista += list.get(i).getUsername() + ", ";
			lista += list.get(i).getNivel();
			lista += "\n";
		}
		do {
			try {
				indiceUsuarioSelecionado = (Integer
						.parseInt(JOptionPane.showInputDialog("Selecione o ID do usuario para alterar \n\n" + lista)) - 1);
			} catch (Exception e) {
				JOptionPane.showMessageDialog(null, "Insira um numero válido");
			}
		}while(indiceUsuarioSelecionado < 0);
		
		
		String username = JOptionPane.showInputDialog("USERNAME: ");
		String senha = JOptionPane.showInputDialog("SENHA: ");
		String nivel = JOptionPane.showInputDialog("NIVEL (admin, gerente, vendedor): ");
		String nome = JOptionPane.showInputDialog("NOME: ");
		String telefone = JOptionPane.showInputDialog("TELEFONE: ");
		String email = JOptionPane.showInputDialog("EMAIL: ");
		String resposta = JOptionPane.showInputDialog("RESPOSTA SECRETA (qual nome do seu pet?): ");

		list.set(indiceUsuarioSelecionado, new Usuario(username, senha, nivel, nome, telefone, email, resposta));
	}

	@Override
	public void remover(List<Usuario> list) {
		String lista = "USUÁRIOS \n";

		for (int i = 0; i < list.size(); i++) {
			lista += "ID " + (i + 1) + ": ";
			lista += list.get(i).getUsername() + ", ";
			lista += list.get(i).getNivel();
			lista += "\n";
		}
		int indiceUsuarioSelecionado = (Integer
				.parseInt(JOptionPane.showInputDialog("Selecione o ID do usuario para remover \n\n" + lista)) - 1);

		list.remove(indiceUsuarioSelecionado);
	}
}
