package service;

import java.time.LocalDateTime;
import java.util.List;

import javax.swing.JOptionPane;

import model.Usuario;

public class LoginService {
	static int indiceUsuario = -1;
	static int tentativasErradas = 0;
	static boolean usuarioEncontrado = false;
	static boolean senhaVerificada = false;

	public static int autenticaUsuarioERetornaIndiceUsuario(List<Usuario> usuarios) throws InterruptedException {
		solicitaLoginEValida(usuarios);

		if (usuarioEncontrado) {
			solicitaSenhaEValida(usuarios);
			
			if (senhaVerificada) {
				JOptionPane.showMessageDialog(null,
						"Usuario autenticado, nível: " + usuarios.get(indiceUsuario).getNivel());
				// setando a variavel para false novamente para caso ocorra novo login
				senhaVerificada = false;
			}else {
				indiceUsuario = -1;
			}
		}
		return indiceUsuario;
	}

	private static void solicitaLoginEValida(List<Usuario> usuarios) throws InterruptedException {
		usuarioEncontrado = false;
		tentativasErradas = 0;

		do {
			String usuarioDigitado = JOptionPane.showInputDialog("Usuário:");

			for (int i = 0; i < usuarios.size(); i++) {
				if (usuarioDigitado.equals(usuarios.get(i).getUsername())) {
					usuarioEncontrado = true;
					indiceUsuario = i;
					break;
				}
			}

			if (!usuarioEncontrado) {
				tentativasErradas++;
				JOptionPane.showMessageDialog(null, "Usuário não encontrado, tente novamente");
			}

			if (tentativasErradas == 3) {
				JOptionPane.showMessageDialog(null, "Tentativas excedidas, aguarde para tentar novamente");
				Thread.sleep(1000);
				tentativasErradas = 0;
				int continuar = JOptionPane.showConfirmDialog(null, "Deseja tentar logar novamente?");
				if (continuar == 1 || continuar == 2)
					break;
			}

		} while (!usuarioEncontrado);

	}

	private static void solicitaSenhaEValida(List<Usuario> usuarios) throws InterruptedException {
		tentativasErradas = 0;

		do {

			String senhaDigitada = JOptionPane.showInputDialog("Senha:");

			if (senhaDigitada.equals(usuarios.get(indiceUsuario).getSenha())) {
				senhaVerificada = true;
			} else {
				tentativasErradas++;
				JOptionPane.showMessageDialog(null, "Senha inválida, tente novamente");
			}

			if (tentativasErradas == 3) {
				JOptionPane.showMessageDialog(null, "Tentativas excedidas, aguarde para tentar novamente");
				Thread.sleep(1000);
				tentativasErradas = 0;
				int continuar = JOptionPane.showConfirmDialog(null, "Deseja tentar logar novamente?");
				if (continuar == 1 || continuar == 2)
					break;
			}

		} while (!senhaVerificada);

	}

	public static void recuperacaoSenha(List<Usuario> usuarios) throws InterruptedException {
		indiceUsuario = solicitaUsernameRetornaIndice(usuarios);
		validaAlteracaoSenha(usuarios);
	}

	private static int solicitaUsernameRetornaIndice(List<Usuario> usuarios) {
		indiceUsuario = -1;

		String usernameDigitado = JOptionPane.showInputDialog("Informe o login que deseja recuperar a senha");

		for (int i = 0; i < usuarios.size(); i++) {
			if (usernameDigitado.equals(usuarios.get(i).getUsername())) {
				indiceUsuario = i;
			}
		}
		return indiceUsuario;
	}

	private static void validaAlteracaoSenha(List<Usuario> usuarios) throws InterruptedException {
		int respostasErradas = 0;
		boolean respostaValidada = false;

		if (indiceUsuario >= 0) {
			String dados = JOptionPane.showInputDialog("Informe o telefone ou email cadastrados para o usuario '"
					+ usuarios.get(indiceUsuario).getUsername() + "'");
			if (dados.equals(usuarios.get(indiceUsuario).getEmail())
					|| dados.equals(usuarios.get(indiceUsuario).getTelefone())) {
				do {
					String respostaSecreta = JOptionPane.showInputDialog("Qual é a resposta da pergunta secreta?");

					if (respostaSecreta.equals(usuarios.get(indiceUsuario).getRespostaSecreta())) {
						usuarios.get(indiceUsuario).setSenha(JOptionPane.showInputDialog("Digite a nova senha"));
						JOptionPane.showMessageDialog(null, "Senha alterada com sucesso");
						respostaValidada = true;
					} else {
						respostasErradas++;
						JOptionPane.showMessageDialog(null, "Resposta inválida, tente novamente");
					}

					if (respostasErradas == 3) {
						JOptionPane.showMessageDialog(null, "Tentativas excedidas, aguarde para tentar novamente");
						Thread.sleep(1000);
						respostasErradas = 0;

					}
				} while (!respostaValidada);

			} else {
				JOptionPane.showMessageDialog(null, "Dados não conferem");
			}
		} else {
			JOptionPane.showMessageDialog(null, "Usuário não encontrado");
		}
	}

	protected static int retornaIndiceUsuarioAutenticado() {
		return indiceUsuario;
	}
}
